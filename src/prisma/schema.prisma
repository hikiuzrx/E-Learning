// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
 
}

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

model User {
  id       Int    @id @default(autoincrement())
  email    String @unique
  fullName String @default("")
  username String @unique @default("")
  password String 

  user1Conversations Converstation[] @relation(name: "user1relation")
  user2Conversations Converstation[] @relation(name: "user2relation")
  messages           Message[]
  courses            course[]
}

model Converstation {
  id         Int       @id @default(autoincrement())
  user1Id    Int
  user2Id    Int
  user1      User      @relation(name: "user1relation", fields: [user1Id], references: [id])
  user2      User      @relation(name: "user2relation", fields: [user2Id], references: [id])
  created_at DateTime  @default(now())
  message    Message[]
 

  @@unique([user1Id, user2Id])
}

model Message {
  id             Int @id @default(autoincrement())
  converstaionId Int
  senderid       Int

  message       String
  created_at     DateTime      @default(now())
  updated_at     DateTime      @default(now())
  converstation Converstation @relation(fields: [converstaionId], references: [id])
  sender        User          @relation(fields: [senderid], references: [id])
}
model course{
  id Int @id @default(autoincrement())
  name String
  description String
  user User @relation(fields: [userId], references: [id])
  userId Int
  created_at DateTime @default(now())
  updated_at DateTime @default(now())
  module  module[]


}
model module {
  id Int @id @default(autoincrement())
  courseId Int
   moduleTitle String
  
 
  created_at DateTime @default(now())
  updated_at DateTime @default(now())
  course course @relation(fields: [courseId], references: [id])

  videos videos[]
}
model videos {
 id Int @id @default(autoincrement())
  moduleId Int
  videoTitle String
  videoUrl String
  created_at DateTime @default(now())
  updated_at DateTime @default(now())
  module module @relation(fields: [moduleId], references: [id])
}